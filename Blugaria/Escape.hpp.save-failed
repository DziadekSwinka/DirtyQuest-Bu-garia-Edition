#ifndef ESCAPE_HPP_INCLUDED
#define ESCAPE_HPP_INCLUDED

#include <SFML/Graphics.hpp>

#include "json.hpp"
#include "Background.hpp"

class Escape
{
private:
    sf::RenderWindow &window;
    sf::Sprite Enemy;
    sf::Texture txt;
    sf::Text KeyText;
    sf::Font OdibeeSans_Regular;
    using json=nlohmann::json;
    json j;
    int chances=3,counter=0;
    float targetXPosition;
    bool isDisplay=false;
    sf::Vector2f EnemyPosition;
    sf::Clock clock,DisplayedTime;
    float startPos;
    enum EnumKey
    {
        Q=0,
        W=1,
        E=2,
        R=4,
        T=5,
        Y=6,
        U=7,
        I=8,
        O=9,
        P=10,
        A=11,
        S=12,
        D=13,
        F=14,
        G=15,
        H=16,
        J=17,
        K=18,
        L=19,
        Z=20,
        X=21,
        C=22,
        V=23,
        B=24,
        N=25,
        M=26
    }Key;
public:
    Escape(sf::RenderWindow &window1):window(window)
    {
        background::loadJSON(&j);
        txt.loadFromFile(j["enemy"]);
        Enemy.setTexture(txt);
        Enemy.setScale(0.3,0.3);
        OdibeeSans_Regular.loadFromFile("OdibeeSans-Regular.ttf");
        KeyText.setFont(OdibeeSans_Regular);
        KeyText.setColor(sf::Color(255,0,0));
        KeyText.setPosition(1000,200);
        KeyText.setCharacterSize(58);
        startPos=background::position;
    }
    auto Update(float delta)->void
    {
        background::position+=5*delta;
        if(clock.getElapsedTime().asSeconds()>3 && isDisplay==false)
        {
            if(std::rand()%100==0)
            {
                clock.restart();
                //Key=static_cast<EnumKey>(std::rand()%26);
                DisplayedTime.restart();
                isDisplay=true;
            }
        }
        if(isDisplay==true)
        {
            KeyText.setString("Press ["+std::to_string(Key)+"] !!!");
            window.draw(KeyText);
            if(DisplayedTime.getElapsedTime().asSeconds()>2)
            {
                isDisplay=false;
                if(chances>0)
                    chances--;
            }
        }
        if(chances==3)
            targetXPosition=200;
        else if(chances==2)
            targetXPosition=500;
        else if(chances==1)
            targetXPosition=800;
        if(EnemyPosition.x!=targetXPosition)
        {
            EnemyPosition.x+=1*delta;
        }
        Enemy.setPosition(EnemyPosition);
        window.draw(Enemy);
    }
};

#endif // ESCAPE_HPP_INCLUDED
